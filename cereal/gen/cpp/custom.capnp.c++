// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: custom.capnp

#include "custom.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<88> b_cd4d70bbee44938f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    143, 147,  68, 238, 187, 112,  77, 205,
     13,   0,   0,   0,   1,   0,   1,   0,
     89,  10,  85,  29, 102, 186,  38, 181,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  90,   1,   0,   0,
     41,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  77, 111, 100,
    117, 108,  97, 114,  65, 115, 115, 105,
    115, 116, 105, 118, 101,  68, 114, 105,
    118, 105, 110, 103,  83, 121, 115, 116,
    101, 109,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
      6, 102, 208, 121, 109, 155,  25, 146,
      1,   0,   0,   0,  26,   1,   0,   0,
     77, 111, 100, 117, 108,  97, 114,  65,
    115, 115, 105, 115, 116, 105, 118, 101,
     68, 114, 105, 118, 105, 110, 103,  83,
    121, 115, 116, 101, 109,  83, 116,  97,
    116, 101,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,  16,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,  17,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
    115, 116,  97, 116, 101,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      6, 102, 208, 121, 109, 155,  25, 146,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 110,  97,  98, 108, 101, 100,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,  99, 116, 105, 118, 101,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 118,  97, 105, 108,  97,  98, 108,
    101,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cd4d70bbee44938f = b_cd4d70bbee44938f.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_cd4d70bbee44938f[] = {
  &s_92199b6d79d06606,
};
static const uint16_t m_cd4d70bbee44938f[] = {2, 3, 1, 0};
static const uint16_t i_cd4d70bbee44938f[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_cd4d70bbee44938f = {
  0xcd4d70bbee44938f, b_cd4d70bbee44938f.words, 88, d_cd4d70bbee44938f, m_cd4d70bbee44938f,
  1, 4, i_cd4d70bbee44938f, nullptr, nullptr, { &s_cd4d70bbee44938f, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<47> b_92199b6d79d06606 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      6, 102, 208, 121, 109, 155,  25, 146,
     43,   0,   0,   0,   2,   0,   0,   0,
    143, 147,  68, 238, 187, 112,  77, 205,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 114,   2,   0,   0,
     57,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0, 127,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  77, 111, 100,
    117, 108,  97, 114,  65, 115, 115, 105,
    115, 116, 105, 118, 101,  68, 114, 105,
    118, 105, 110, 103,  83, 121, 115, 116,
    101, 109,  46,  77, 111, 100, 117, 108,
     97, 114,  65, 115, 115, 105, 115, 116,
    105, 118, 101,  68, 114, 105, 118, 105,
    110, 103,  83, 121, 115, 116, 101, 109,
     83, 116,  97, 116, 101,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     20,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115,  97,  98, 108, 101, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 117, 115, 101, 100,   0,   0,
    101, 110,  97,  98, 108, 101, 100,   0,
    115, 111, 102, 116,  68, 105, 115,  97,
     98, 108, 105, 110, 103,   0,   0,   0,
    111, 118, 101, 114, 114, 105, 100, 105,
    110, 103,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_92199b6d79d06606 = b_92199b6d79d06606.words;
#if !CAPNP_LITE
static const uint16_t m_92199b6d79d06606[] = {0, 2, 4, 1, 3};
const ::capnp::_::RawSchema s_92199b6d79d06606 = {
  0x92199b6d79d06606, b_92199b6d79d06606.words, 47, nullptr, m_92199b6d79d06606,
  0, 5, nullptr, nullptr, nullptr, { &s_92199b6d79d06606, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(ModularAssistiveDrivingSystemState_92199b6d79d06606, 92199b6d79d06606);
static const ::capnp::_::AlignedData<33> b_81c2f05a394cf4af = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    175, 244,  76,  57,  90, 240, 194, 129,
     13,   0,   0,   0,   1,   0,   0,   0,
     89,  10,  85,  29, 102, 186,  38, 181,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  83, 101, 108,
    102, 100, 114, 105, 118, 101,  83, 116,
     97, 116, 101,  83,  80,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    109,  97, 100, 115,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    143, 147,  68, 238, 187, 112,  77, 205,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_81c2f05a394cf4af = b_81c2f05a394cf4af.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_81c2f05a394cf4af[] = {
  &s_cd4d70bbee44938f,
};
static const uint16_t m_81c2f05a394cf4af[] = {0};
static const uint16_t i_81c2f05a394cf4af[] = {0};
const ::capnp::_::RawSchema s_81c2f05a394cf4af = {
  0x81c2f05a394cf4af, b_81c2f05a394cf4af.words, 33, d_81c2f05a394cf4af, m_81c2f05a394cf4af,
  1, 1, i_81c2f05a394cf4af, nullptr, nullptr, { &s_81c2f05a394cf4af, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<102> b_aedffd8f31e7b55d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     93, 181, 231,  49, 143, 253, 223, 174,
     13,   0,   0,   0,   1,   0,   0,   0,
     89,  10,  85,  29, 102, 186,  38, 181,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   0,   0,   0,
     33,   0,   0,   0, 135,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  77, 111, 100,
    101, 108,  77,  97, 110,  97, 103, 101,
    114,  83,  80,   0,   0,   0,   0,   0,
     32,   0,   0,   0,   1,   0,   1,   0,
    134, 226, 223, 233, 138, 174, 203, 216,
     57,   0,   0,   0,  98,   0,   0,   0,
    185,  72,  32, 230,  83,  77, 131, 218,
     57,   0,   0,   0, 122,   0,   0,   0,
    115,  76, 214,  20,  81, 178, 119, 166,
     57,   0,   0,   0, 138,   0,   0,   0,
    209, 147,  70, 166, 116, 206,  65, 228,
     61,   0,   0,   0,  74,   0,   0,   0,
    177,  18, 161, 254, 101, 110, 195, 231,
     61,   0,   0,   0,  50,   0,   0,   0,
      5, 123,  36, 126, 138,  18, 156, 201,
     57,   0,   0,   0,  58,   0,   0,   0,
    124, 232,  26,  54,  13,   0, 109, 215,
     53,   0,   0,   0,  74,   0,   0,   0,
    115, 212,  90,  80, 192,  33,   8, 230,
     53,   0,   0,   0,  98,   0,   0,   0,
     68, 111, 119, 110, 108, 111,  97, 100,
     85, 114, 105,   0,   0,   0,   0,   0,
     68, 111, 119, 110, 108, 111,  97, 100,
     83, 116,  97, 116, 117, 115,   0,   0,
     68, 111, 119, 110, 108, 111,  97, 100,
     80, 114, 111, 103, 114, 101, 115, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     65, 114, 116, 105, 102,  97,  99, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
     77, 111, 100, 101, 108,   0,   0,   0,
     82, 117, 110, 110, 101, 114,   0,   0,
     79, 118, 101, 114, 114, 105, 100, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     77, 111, 100, 101, 108,  66, 117, 110,
    100, 108, 101,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     85,   0,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     88,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
     97,  99, 116, 105, 118, 101,  66, 117,
    110, 100, 108, 101,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    115, 212,  90,  80, 192,  33,   8, 230,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 108, 101,  99, 116, 101, 100,
     66, 117, 110, 100, 108, 101,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    115, 212,  90,  80, 192,  33,   8, 230,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 118,  97, 105, 108,  97,  98, 108,
    101,  66, 117, 110, 100, 108, 101, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    115, 212,  90,  80, 192,  33,   8, 230,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_aedffd8f31e7b55d = b_aedffd8f31e7b55d.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_aedffd8f31e7b55d[] = {
  &s_e60821c0505ad473,
};
static const uint16_t m_aedffd8f31e7b55d[] = {0, 2, 1};
static const uint16_t i_aedffd8f31e7b55d[] = {0, 1, 2};
const ::capnp::_::RawSchema s_aedffd8f31e7b55d = {
  0xaedffd8f31e7b55d, b_aedffd8f31e7b55d.words, 102, d_aedffd8f31e7b55d, m_aedffd8f31e7b55d,
  1, 3, i_aedffd8f31e7b55d, nullptr, nullptr, { &s_aedffd8f31e7b55d, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_d8cbae8ae9dfe286 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    134, 226, 223, 233, 138, 174, 203, 216,
     28,   0,   0,   0,   1,   0,   0,   0,
     93, 181, 231,  49, 143, 253, 223, 174,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  66,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  77, 111, 100,
    101, 108,  77,  97, 110,  97, 103, 101,
    114,  83,  80,  46,  68, 111, 119, 110,
    108, 111,  97, 100,  85, 114, 105,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    117, 114, 105,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 104,  97,  50,  53,  54,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d8cbae8ae9dfe286 = b_d8cbae8ae9dfe286.words;
#if !CAPNP_LITE
static const uint16_t m_d8cbae8ae9dfe286[] = {1, 0};
static const uint16_t i_d8cbae8ae9dfe286[] = {0, 1};
const ::capnp::_::RawSchema s_d8cbae8ae9dfe286 = {
  0xd8cbae8ae9dfe286, b_d8cbae8ae9dfe286.words, 49, nullptr, m_d8cbae8ae9dfe286,
  0, 2, i_d8cbae8ae9dfe286, nullptr, nullptr, { &s_d8cbae8ae9dfe286, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<43> b_da834d53e62048b9 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    185,  72,  32, 230,  83,  77, 131, 218,
     28,   0,   0,   0,   2,   0,   0,   0,
     93, 181, 231,  49, 143, 253, 223, 174,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  90,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 127,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  77, 111, 100,
    101, 108,  77,  97, 110,  97, 103, 101,
    114,  83,  80,  46,  68, 111, 119, 110,
    108, 111,  97, 100,  83, 116,  97, 116,
    117, 115,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     20,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 111, 116,  68, 111, 119, 110, 108,
    111,  97, 100, 105, 110, 103,   0,   0,
    100, 111, 119, 110, 108, 111,  97, 100,
    105, 110, 103,   0,   0,   0,   0,   0,
    100, 111, 119, 110, 108, 111,  97, 100,
    101, 100,   0,   0,   0,   0,   0,   0,
     99,  97,  99, 104, 101, 100,   0,   0,
    102,  97, 105, 108, 101, 100,   0,   0, }
};
::capnp::word const* const bp_da834d53e62048b9 = b_da834d53e62048b9.words;
#if !CAPNP_LITE
static const uint16_t m_da834d53e62048b9[] = {3, 2, 1, 4, 0};
const ::capnp::_::RawSchema s_da834d53e62048b9 = {
  0xda834d53e62048b9, b_da834d53e62048b9.words, 43, nullptr, m_da834d53e62048b9,
  0, 5, nullptr, nullptr, nullptr, { &s_da834d53e62048b9, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(DownloadStatus_da834d53e62048b9, da834d53e62048b9);
static const ::capnp::_::AlignedData<66> b_a677b25114d64c73 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    115,  76, 214,  20,  81, 178, 119, 166,
     28,   0,   0,   0,   1,   0,   2,   0,
     93, 181, 231,  49, 143, 253, 223, 174,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  77, 111, 100,
    101, 108,  77,  97, 110,  97, 103, 101,
    114,  83,  80,  46,  68, 111, 119, 110,
    108, 111,  97, 100,  80, 114, 111, 103,
    114, 101, 115, 115,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
    115, 116,  97, 116, 117, 115,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    185,  72,  32, 230,  83,  77, 131, 218,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111, 103, 114, 101, 115, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 116,  97,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a677b25114d64c73 = b_a677b25114d64c73.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a677b25114d64c73[] = {
  &s_da834d53e62048b9,
};
static const uint16_t m_a677b25114d64c73[] = {2, 1, 0};
static const uint16_t i_a677b25114d64c73[] = {0, 1, 2};
const ::capnp::_::RawSchema s_a677b25114d64c73 = {
  0xa677b25114d64c73, b_a677b25114d64c73.words, 66, d_a677b25114d64c73, m_a677b25114d64c73,
  1, 3, i_a677b25114d64c73, nullptr, nullptr, { &s_a677b25114d64c73, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<68> b_e441ce74a64693d1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    209, 147,  70, 166, 116, 206,  65, 228,
     28,   0,   0,   0,   1,   0,   0,   0,
     93, 181, 231,  49, 143, 253, 223, 174,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  77, 111, 100,
    101, 108,  77,  97, 110,  97, 103, 101,
    114,  83,  80,  46,  65, 114, 116, 105,
    102,  97,  99, 116,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   0,   0,   0,   3,   0,   1,   0,
     88,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     85,   0,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     88,   0,   0,   0,   3,   0,   1,   0,
    100,   0,   0,   0,   2,   0,   1,   0,
    102, 105, 108, 101,  78,  97, 109, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 111, 119, 110, 108, 111,  97, 100,
     85, 114, 105,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    134, 226, 223, 233, 138, 174, 203, 216,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 111, 119, 110, 108, 111,  97, 100,
     80, 114, 111, 103, 114, 101, 115, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    115,  76, 214,  20,  81, 178, 119, 166,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e441ce74a64693d1 = b_e441ce74a64693d1.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e441ce74a64693d1[] = {
  &s_a677b25114d64c73,
  &s_d8cbae8ae9dfe286,
};
static const uint16_t m_e441ce74a64693d1[] = {2, 1, 0};
static const uint16_t i_e441ce74a64693d1[] = {0, 1, 2};
const ::capnp::_::RawSchema s_e441ce74a64693d1 = {
  0xe441ce74a64693d1, b_e441ce74a64693d1.words, 68, d_e441ce74a64693d1, m_e441ce74a64693d1,
  2, 3, i_e441ce74a64693d1, nullptr, nullptr, { &s_e441ce74a64693d1, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<69> b_e7c36e65fea112b1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    177,  18, 161, 254, 101, 110, 195, 231,
     28,   0,   0,   0,   1,   0,   1,   0,
     93, 181, 231,  49, 143, 253, 223, 174,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   1,   0,   0,
     37,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  77, 111, 100,
    101, 108,  77,  97, 110,  97, 103, 101,
    114,  83,  80,  46,  77, 111, 100, 101,
    108,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    178, 165,  38,  44, 235, 250,  35, 175,
      1,   0,   0,   0,  42,   0,   0,   0,
     84, 121, 112, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    178, 165,  38,  44, 235, 250,  35, 175,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 114, 116, 105, 102,  97,  99, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    209, 147,  70, 166, 116, 206,  65, 228,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 101, 116,  97, 100,  97, 116,  97,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    209, 147,  70, 166, 116, 206,  65, 228,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e7c36e65fea112b1 = b_e7c36e65fea112b1.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e7c36e65fea112b1[] = {
  &s_af23faeb2c26a5b2,
  &s_e441ce74a64693d1,
};
static const uint16_t m_e7c36e65fea112b1[] = {1, 2, 0};
static const uint16_t i_e7c36e65fea112b1[] = {0, 1, 2};
const ::capnp::_::RawSchema s_e7c36e65fea112b1 = {
  0xe7c36e65fea112b1, b_e7c36e65fea112b1.words, 69, d_e7c36e65fea112b1, m_e7c36e65fea112b1,
  2, 3, i_e7c36e65fea112b1, nullptr, nullptr, { &s_e7c36e65fea112b1, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<37> b_af23faeb2c26a5b2 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    178, 165,  38,  44, 235, 250,  35, 175,
     34,   0,   0,   0,   2,   0,   0,   0,
    177,  18, 161, 254, 101, 110, 195, 231,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 103,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  77, 111, 100,
    101, 108,  77,  97, 110,  97, 103, 101,
    114,  83,  80,  46,  77, 111, 100, 101,
    108,  46,  84, 121, 112, 101,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 117, 112, 101, 114,  99, 111, 109,
     98, 111,   0,   0,   0,   0,   0,   0,
    110,  97, 118, 105, 103,  97, 116, 105,
    111, 110,   0,   0,   0,   0,   0,   0,
    118, 105, 115, 105, 111, 110,   0,   0,
    112, 111, 108, 105,  99, 121,   0,   0, }
};
::capnp::word const* const bp_af23faeb2c26a5b2 = b_af23faeb2c26a5b2.words;
#if !CAPNP_LITE
static const uint16_t m_af23faeb2c26a5b2[] = {1, 3, 0, 2};
const ::capnp::_::RawSchema s_af23faeb2c26a5b2 = {
  0xaf23faeb2c26a5b2, b_af23faeb2c26a5b2.words, 37, nullptr, m_af23faeb2c26a5b2,
  0, 4, nullptr, nullptr, nullptr, { &s_af23faeb2c26a5b2, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(Type_af23faeb2c26a5b2, af23faeb2c26a5b2);
static const ::capnp::_::AlignedData<32> b_c99c128a7e247b05 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      5, 123,  36, 126, 138,  18, 156, 201,
     28,   0,   0,   0,   2,   0,   0,   0,
     93, 181, 231,  49, 143, 253, 223, 174,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  79,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  77, 111, 100,
    101, 108,  77,  97, 110,  97, 103, 101,
    114,  83,  80,  46,  82, 117, 110, 110,
    101, 114,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 110, 112, 101,   0,   0,   0,   0,
    116, 105, 110, 121, 103, 114,  97, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116, 111,  99, 107,   0,   0,   0, }
};
::capnp::word const* const bp_c99c128a7e247b05 = b_c99c128a7e247b05.words;
#if !CAPNP_LITE
static const uint16_t m_c99c128a7e247b05[] = {0, 2, 1};
const ::capnp::_::RawSchema s_c99c128a7e247b05 = {
  0xc99c128a7e247b05, b_c99c128a7e247b05.words, 32, nullptr, m_c99c128a7e247b05,
  0, 3, nullptr, nullptr, nullptr, { &s_c99c128a7e247b05, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(Runner_c99c128a7e247b05, c99c128a7e247b05);
static const ::capnp::_::AlignedData<49> b_d76d000d361ae87c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    124, 232,  26,  54,  13,   0, 109, 215,
     28,   0,   0,   0,   1,   0,   0,   0,
     93, 181, 231,  49, 143, 253, 223, 174,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  77, 111, 100,
    101, 108,  77,  97, 110,  97, 103, 101,
    114,  83,  80,  46,  79, 118, 101, 114,
    114, 105, 100, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    107, 101, 121,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d76d000d361ae87c = b_d76d000d361ae87c.words;
#if !CAPNP_LITE
static const uint16_t m_d76d000d361ae87c[] = {0, 1};
static const uint16_t i_d76d000d361ae87c[] = {0, 1};
const ::capnp::_::RawSchema s_d76d000d361ae87c = {
  0xd76d000d361ae87c, b_d76d000d361ae87c.words, 49, nullptr, m_d76d000d361ae87c,
  0, 2, i_d76d000d361ae87c, nullptr, nullptr, { &s_d76d000d361ae87c, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<214> b_e60821c0505ad473 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    115, 212,  90,  80, 192,  33,   8, 230,
     28,   0,   0,   0,   1,   0,   3,   0,
     93, 181, 231,  49, 143, 253, 223, 174,
      6,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  66,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 167,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  77, 111, 100,
    101, 108,  77,  97, 110,  97, 103, 101,
    114,  83,  80,  46,  77, 111, 100, 101,
    108,  66, 117, 110, 100, 108, 101,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     48,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   1,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     60,   1,   0,   0,   3,   0,   1,   0,
     72,   1,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   1,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   1,   0,   0,   3,   0,   1,   0,
     80,   1,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   1,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     76,   1,   0,   0,   3,   0,   1,   0,
     88,   1,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     85,   1,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   1,   0,   0,   3,   0,   1,   0,
    108,   1,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   1,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   1,   0,   0,   3,   0,   1,   0,
    112,   1,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   1,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,   1,   0,   0,   3,   0,   1,   0,
    120,   1,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117,   1,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116,   1,   0,   0,   3,   0,   1,   0,
    128,   1,   0,   0,   2,   0,   1,   0,
      7,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   1,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   1,   0,   0,   3,   0,   1,   0,
    132,   1,   0,   0,   2,   0,   1,   0,
      8,   0,   0,   0,  96,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   1,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   1,   0,   0,   3,   0,   1,   0,
    136,   1,   0,   0,   2,   0,   1,   0,
      9,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   9,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   1,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   1,   0,   0,   3,   0,   1,   0,
    140,   1,   0,   0,   2,   0,   1,   0,
     10,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,  10,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   1,   0,   0, 186,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    140,   1,   0,   0,   3,   0,   1,   0,
    152,   1,   0,   0,   2,   0,   1,   0,
     11,   0,   0,   0,   5,   0,   0,   0,
      0,   0,   1,   0,  11,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    149,   1,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    148,   1,   0,   0,   3,   0,   1,   0,
    176,   1,   0,   0,   2,   0,   1,   0,
    105, 110, 100, 101, 120,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 116, 101, 114, 110,  97, 108,
     78,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 105, 115, 112, 108,  97, 121,  78,
     97, 109, 101,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 101, 108, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    177,  18, 161, 254, 101, 110, 195, 231,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116,  97, 116, 117, 115,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    185,  72,  32, 230,  83,  77, 131, 218,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 101, 110, 101, 114,  97, 116, 105,
    111, 110,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 110, 118, 105, 114, 111, 110, 109,
    101, 110, 116,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 117, 110, 110, 101, 114,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      5, 123,  36, 126, 138,  18, 156, 201,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 115,  50,  48, 104, 122,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 102,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 105, 110, 105, 109, 117, 109,  83,
    101, 108, 101,  99, 116, 111, 114,  86,
    101, 114, 115, 105, 111, 110,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 118, 101, 114, 114, 105, 100, 101,
    115,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    124, 232,  26,  54,  13,   0, 109, 215,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e60821c0505ad473 = b_e60821c0505ad473.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e60821c0505ad473[] = {
  &s_c99c128a7e247b05,
  &s_d76d000d361ae87c,
  &s_da834d53e62048b9,
  &s_e7c36e65fea112b1,
};
static const uint16_t m_e60821c0505ad473[] = {2, 6, 5, 0, 1, 8, 10, 3, 11, 9, 7, 4};
static const uint16_t i_e60821c0505ad473[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11};
const ::capnp::_::RawSchema s_e60821c0505ad473 = {
  0xe60821c0505ad473, b_e60821c0505ad473.words, 214, d_e60821c0505ad473, m_e60821c0505ad473,
  4, 12, i_e60821c0505ad473, nullptr, nullptr, { &s_e60821c0505ad473, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<39> b_f35cc4560bbf6ec2 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    194, 110, 191,  11,  86, 196,  92, 243,
     13,   0,   0,   0,   1,   0,   0,   0,
     89,  10,  85,  29, 102, 186,  38, 181,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  76, 111, 110,
    103, 105, 116, 117, 100, 105, 110,  97,
    108,  80, 108,  97, 110,  83,  80,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    119, 191,  14,  16, 174,  91, 106, 188,
      1,   0,   0,   0, 218,   0,   0,   0,
     68, 121, 110,  97, 109, 105,  99,  69,
    120, 112, 101, 114, 105, 109, 101, 110,
    116,  97, 108,  67, 111, 110, 116, 114,
    111, 108,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    100, 101,  99,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    119, 191,  14,  16, 174,  91, 106, 188,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f35cc4560bbf6ec2 = b_f35cc4560bbf6ec2.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f35cc4560bbf6ec2[] = {
  &s_bc6a5bae100ebf77,
};
static const uint16_t m_f35cc4560bbf6ec2[] = {0};
static const uint16_t i_f35cc4560bbf6ec2[] = {0};
const ::capnp::_::RawSchema s_f35cc4560bbf6ec2 = {
  0xf35cc4560bbf6ec2, b_f35cc4560bbf6ec2.words, 39, d_f35cc4560bbf6ec2, m_f35cc4560bbf6ec2,
  1, 1, i_f35cc4560bbf6ec2, nullptr, nullptr, { &s_f35cc4560bbf6ec2, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<73> b_bc6a5bae100ebf77 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    119, 191,  14,  16, 174,  91, 106, 188,
     32,   0,   0,   0,   1,   0,   1,   0,
    194, 110, 191,  11,  86, 196,  92, 243,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 218,   1,   0,   0,
     49,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  76, 111, 110,
    103, 105, 116, 117, 100, 105, 110,  97,
    108,  80, 108,  97, 110,  83,  80,  46,
     68, 121, 110,  97, 109, 105,  99,  69,
    120, 112, 101, 114, 105, 109, 101, 110,
    116,  97, 108,  67, 111, 110, 116, 114,
    111, 108,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
     55,  64, 112, 160, 167, 242, 246, 216,
      1,   0,   0,   0,   2,   1,   0,   0,
     68, 121, 110,  97, 109, 105,  99,  69,
    120, 112, 101, 114, 105, 109, 101, 110,
    116,  97, 108,  67, 111, 110, 116, 114,
    111, 108,  83, 116,  97, 116, 101,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,  16,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,  17,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    115, 116,  97, 116, 101,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
     55,  64, 112, 160, 167, 242, 246, 216,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 110,  97,  98, 108, 101, 100,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,  99, 116, 105, 118, 101,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bc6a5bae100ebf77 = b_bc6a5bae100ebf77.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_bc6a5bae100ebf77[] = {
  &s_d8f6f2a7a0704037,
};
static const uint16_t m_bc6a5bae100ebf77[] = {2, 1, 0};
static const uint16_t i_bc6a5bae100ebf77[] = {0, 1, 2};
const ::capnp::_::RawSchema s_bc6a5bae100ebf77 = {
  0xbc6a5bae100ebf77, b_bc6a5bae100ebf77.words, 73, d_bc6a5bae100ebf77, m_bc6a5bae100ebf77,
  1, 3, i_bc6a5bae100ebf77, nullptr, nullptr, { &s_bc6a5bae100ebf77, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_d8f6f2a7a0704037 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     55,  64, 112, 160, 167, 242, 246, 216,
     59,   0,   0,   0,   2,   0,   0,   0,
    119, 191,  14,  16, 174,  91, 106, 188,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 218,   2,   0,   0,
     65,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     61,   0,   0,   0,  55,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  76, 111, 110,
    103, 105, 116, 117, 100, 105, 110,  97,
    108,  80, 108,  97, 110,  83,  80,  46,
     68, 121, 110,  97, 109, 105,  99,  69,
    120, 112, 101, 114, 105, 109, 101, 110,
    116,  97, 108,  67, 111, 110, 116, 114,
    111, 108,  46,  68, 121, 110,  97, 109,
    105,  99,  69, 120, 112, 101, 114, 105,
    109, 101, 110, 116,  97, 108,  67, 111,
    110, 116, 114, 111, 108,  83, 116,  97,
    116, 101,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,  99,  99,   0,   0,   0,   0,   0,
     98, 108, 101, 110, 100, 101, 100,   0, }
};
::capnp::word const* const bp_d8f6f2a7a0704037 = b_d8f6f2a7a0704037.words;
#if !CAPNP_LITE
static const uint16_t m_d8f6f2a7a0704037[] = {0, 1};
const ::capnp::_::RawSchema s_d8f6f2a7a0704037 = {
  0xd8f6f2a7a0704037, b_d8f6f2a7a0704037.words, 34, nullptr, m_d8f6f2a7a0704037,
  0, 2, nullptr, nullptr, nullptr, { &s_d8f6f2a7a0704037, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(DynamicExperimentalControlState_d8f6f2a7a0704037, d8f6f2a7a0704037);
static const ::capnp::_::AlignedData<44> b_da96579883444c35 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     53,  76,  68, 131, 152,  87, 150, 218,
     13,   0,   0,   0,   1,   0,   0,   0,
     89,  10,  85,  29, 102, 186,  38, 181,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 218,   0,   0,   0,
     33,   0,   0,   0,  39,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     57,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  79, 110, 114,
    111,  97, 100,  69, 118, 101, 110, 116,
     83,  80,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   1,   0,   1,   0,
    147, 247, 205,  47, 117,  49, 232, 246,
      9,   0,   0,   0,  50,   0,   0,   0,
    230, 181,  70, 166, 216, 126,   0, 184,
      5,   0,   0,   0,  82,   0,   0,   0,
     69, 118, 101, 110, 116,   0,   0,   0,
     69, 118, 101, 110, 116,  78,  97, 109,
    101,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    101, 118, 101, 110, 116, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    147, 247, 205,  47, 117,  49, 232, 246,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_da96579883444c35 = b_da96579883444c35.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_da96579883444c35[] = {
  &s_f6e831752fcdf793,
};
static const uint16_t m_da96579883444c35[] = {0};
static const uint16_t i_da96579883444c35[] = {0};
const ::capnp::_::RawSchema s_da96579883444c35 = {
  0xda96579883444c35, b_da96579883444c35.words, 44, d_da96579883444c35, m_da96579883444c35,
  1, 1, i_da96579883444c35, nullptr, nullptr, { &s_da96579883444c35, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<193> b_f6e831752fcdf793 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    147, 247, 205,  47, 117,  49, 232, 246,
     27,   0,   0,   0,   1,   0,   1,   0,
     53,  76,  68, 131, 152,  87, 150, 218,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  10,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 111,   2,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  79, 110, 114,
    111,  97, 100,  69, 118, 101, 110, 116,
     83,  80,  46,  69, 118, 101, 110, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     44,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   1,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     32,   1,   0,   0,   3,   0,   1,   0,
     44,   1,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,  16,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   1,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   1,   0,   0,   3,   0,   1,   0,
     48,   1,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,  17,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   1,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   1,   0,   0,   3,   0,   1,   0,
     52,   1,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   1,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   1,   0,   0,   3,   0,   1,   0,
     56,   1,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,  19,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   1,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     52,   1,   0,   0,   3,   0,   1,   0,
     64,   1,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,  20,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     61,   1,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     60,   1,   0,   0,   3,   0,   1,   0,
     72,   1,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,  21,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   1,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   1,   0,   0,   3,   0,   1,   0,
     84,   1,   0,   0,   2,   0,   1,   0,
      7,   0,   0,   0,  22,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   1,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   1,   0,   0,   3,   0,   1,   0,
     92,   1,   0,   0,   2,   0,   1,   0,
      8,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     89,   1,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     88,   1,   0,   0,   3,   0,   1,   0,
    100,   1,   0,   0,   2,   0,   1,   0,
     10,   0,   0,   0,  24,   0,   0,   0,
      0,   0,   1,   0,   9,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   1,   0,   0, 170,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   1,   0,   0,   3,   0,   1,   0,
    112,   1,   0,   0,   2,   0,   1,   0,
      9,   0,   0,   0,  25,   0,   0,   0,
      0,   0,   1,   0,  10,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   1,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,   1,   0,   0,   3,   0,   1,   0,
    120,   1,   0,   0,   2,   0,   1,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    230, 181,  70, 166, 216, 126,   0, 184,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 110,  97,  98, 108, 101,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 111,  69, 110, 116, 114, 121,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    119,  97, 114, 110, 105, 110, 103,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 115, 101, 114,  68, 105, 115,  97,
     98, 108, 101,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 111, 102, 116,  68, 105, 115,  97,
     98, 108, 101,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 109, 109, 101, 100, 105,  97, 116,
    101,  68, 105, 115,  97,  98, 108, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 101,  69, 110,  97,  98, 108,
    101,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 101, 114, 109,  97, 110, 101, 110,
    116,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 118, 101, 114, 114, 105, 100, 101,
     76, 111, 110, 103, 105, 116, 117, 100,
    105, 110,  97, 108,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 118, 101, 114, 114, 105, 100, 101,
     76,  97, 116, 101, 114,  97, 108,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f6e831752fcdf793 = b_f6e831752fcdf793.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f6e831752fcdf793[] = {
  &s_b8007ed8a646b5e6,
};
static const uint16_t m_f6e831752fcdf793[] = {1, 6, 0, 2, 10, 9, 8, 7, 5, 4, 3};
static const uint16_t i_f6e831752fcdf793[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
const ::capnp::_::RawSchema s_f6e831752fcdf793 = {
  0xf6e831752fcdf793, b_f6e831752fcdf793.words, 193, d_f6e831752fcdf793, m_f6e831752fcdf793,
  1, 11, i_f6e831752fcdf793, nullptr, nullptr, { &s_f6e831752fcdf793, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<119> b_b8007ed8a646b5e6 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    230, 181,  70, 166, 216, 126,   0, 184,
     27,   0,   0,   0,   2,   0,   0,   0,
     53,  76,  68, 131, 152,  87, 150, 218,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 159,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  79, 110, 114,
    111,  97, 100,  69, 118, 101, 110, 116,
     83,  80,  46,  69, 118, 101, 110, 116,
     78,  97, 109, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     68,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    197,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    193,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
    189,   0,   0,   0, 186,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
    189,   0,   0,   0, 218,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
    193,   0,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
    193,   0,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
    193,   0,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
    189,   0,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
    185,   0,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
    185,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0, 202,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
    185,   0,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0, 194,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0, 226,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
    185,   0,   0,   0, 202,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    189,   0,   0,   0, 178,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    189,   0,   0,   0, 178,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 107,  97, 115,  69, 110,  97,  98,
    108, 101,   0,   0,   0,   0,   0,   0,
    108, 107,  97, 115,  68, 105, 115,  97,
     98, 108, 101,   0,   0,   0,   0,   0,
    109,  97, 110, 117,  97, 108,  83, 116,
    101, 101, 114, 105, 110, 103,  82, 101,
    113, 117, 105, 114, 101, 100,   0,   0,
    109,  97, 110, 117,  97, 108,  76, 111,
    110, 103, 105, 116, 117, 100, 105, 110,
     97, 108,  82, 101, 113, 117, 105, 114,
    101, 100,   0,   0,   0,   0,   0,   0,
    115, 105, 108, 101, 110, 116,  76, 107,
     97, 115,  69, 110,  97,  98, 108, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 105, 108, 101, 110, 116,  76, 107,
     97, 115,  68, 105, 115,  97,  98, 108,
    101,   0,   0,   0,   0,   0,   0,   0,
    115, 105, 108, 101, 110, 116,  66, 114,
     97, 107, 101,  72, 111, 108, 100,   0,
    115, 105, 108, 101, 110, 116,  87, 114,
    111, 110, 103,  71, 101,  97, 114,   0,
    115, 105, 108, 101, 110, 116,  82, 101,
    118, 101, 114, 115, 101,  71, 101,  97,
    114,   0,   0,   0,   0,   0,   0,   0,
    115, 105, 108, 101, 110, 116,  68, 111,
    111, 114,  79, 112, 101, 110,   0,   0,
    115, 105, 108, 101, 110, 116,  83, 101,
     97, 116,  98, 101, 108, 116,  78, 111,
    116,  76,  97, 116,  99, 104, 101, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 105, 108, 101, 110, 116,  80,  97,
    114, 107,  66, 114,  97, 107, 101,   0,
     99, 111, 110, 116, 114, 111, 108, 115,
     77, 105, 115, 109,  97, 116,  99, 104,
     76,  97, 116, 101, 114,  97, 108,   0,
    104, 121, 117, 110, 100,  97, 105,  82,
     97, 100,  97, 114,  84, 114,  97,  99,
    107, 115,  67, 111, 110, 102, 105, 114,
    109, 101, 100,   0,   0,   0,   0,   0,
    101, 120, 112, 101, 114, 105, 109, 101,
    110, 116,  97, 108,  77, 111, 100, 101,
     83, 119, 105, 116,  99, 104, 101, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
    119, 114, 111, 110, 103,  67,  97, 114,
     77, 111, 100, 101,  65, 108, 101, 114,
    116,  79, 110, 108, 121,   0,   0,   0,
    112, 101, 100,  97, 108,  80, 114, 101,
    115, 115, 101, 100,  65, 108, 101, 114,
    116,  79, 110, 108, 121,   0,   0,   0, }
};
::capnp::word const* const bp_b8007ed8a646b5e6 = b_b8007ed8a646b5e6.words;
#if !CAPNP_LITE
static const uint16_t m_b8007ed8a646b5e6[] = {12, 14, 13, 1, 0, 3, 2, 16, 6, 9, 5, 4, 11, 8, 10, 7, 15};
const ::capnp::_::RawSchema s_b8007ed8a646b5e6 = {
  0xb8007ed8a646b5e6, b_b8007ed8a646b5e6.words, 119, nullptr, m_b8007ed8a646b5e6,
  0, 17, nullptr, nullptr, nullptr, { &s_b8007ed8a646b5e6, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(EventName_b8007ed8a646b5e6, b8007ed8a646b5e6);
static const ::capnp::_::AlignedData<73> b_80ae746ee2596b11 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     17, 107,  89, 226, 110, 116, 174, 128,
     13,   0,   0,   0,   1,   0,   1,   0,
     89,  10,  85,  29, 102, 186,  38, 181,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  67,  97, 114,
     80,  97, 114,  97, 109, 115,  83,  80,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    239,  36,  41,  49,   8, 129, 252, 218,
      1,   0,   0,   0, 226,   0,   0,   0,
     78, 101, 117, 114,  97, 108,  78, 101,
    116, 119, 111, 114, 107,  76,  97, 116,
    101, 114,  97, 108,  67, 111, 110, 116,
    114, 111, 108,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0, 226,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     88,   0,   0,   0,   3,   0,   1,   0,
    100,   0,   0,   0,   2,   0,   1,   0,
    102, 108,  97, 103, 115,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  97, 102, 101, 116, 121,  80,  97,
    114,  97, 109,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110, 101, 117, 114,  97, 108,  78, 101,
    116, 119, 111, 114, 107,  76,  97, 116,
    101, 114,  97, 108,  67, 111, 110, 116,
    114, 111, 108,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    239,  36,  41,  49,   8, 129, 252, 218,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_80ae746ee2596b11 = b_80ae746ee2596b11.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_80ae746ee2596b11[] = {
  &s_dafc8108312924ef,
};
static const uint16_t m_80ae746ee2596b11[] = {0, 2, 1};
static const uint16_t i_80ae746ee2596b11[] = {0, 1, 2};
const ::capnp::_::RawSchema s_80ae746ee2596b11 = {
  0x80ae746ee2596b11, b_80ae746ee2596b11.words, 73, d_80ae746ee2596b11, m_80ae746ee2596b11,
  1, 3, i_80ae746ee2596b11, nullptr, nullptr, { &s_80ae746ee2596b11, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<56> b_dafc8108312924ef = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    239,  36,  41,  49,   8, 129, 252, 218,
     25,   0,   0,   0,   1,   0,   1,   0,
     17, 107,  89, 226, 110, 116, 174, 128,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   1,   0,   0,
     45,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     53,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  67,  97, 114,
     80,  97, 114,  97, 109, 115,  83,  80,
     46,  78, 101, 117, 114,  97, 108,  78,
    101, 116, 119, 111, 114, 107,  76,  97,
    116, 101, 114,  97, 108,  67, 111, 110,
    116, 114, 111, 108,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
     15, 212,  14, 205, 223, 208, 126, 129,
      1,   0,   0,   0,  50,   0,   0,   0,
     77, 111, 100, 101, 108,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     60,   0,   0,   0,   2,   0,   1,   0,
    109, 111, 100, 101, 108,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     15, 212,  14, 205, 223, 208, 126, 129,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 117, 122, 122, 121,  70, 105, 110,
    103, 101, 114, 112, 114, 105, 110, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_dafc8108312924ef = b_dafc8108312924ef.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_dafc8108312924ef[] = {
  &s_817ed0dfcd0ed40f,
};
static const uint16_t m_dafc8108312924ef[] = {1, 0};
static const uint16_t i_dafc8108312924ef[] = {0, 1};
const ::capnp::_::RawSchema s_dafc8108312924ef = {
  0xdafc8108312924ef, b_dafc8108312924ef.words, 56, d_dafc8108312924ef, m_dafc8108312924ef,
  1, 2, i_dafc8108312924ef, nullptr, nullptr, { &s_dafc8108312924ef, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<52> b_817ed0dfcd0ed40f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     15, 212,  14, 205, 223, 208, 126, 129,
     53,   0,   0,   0,   1,   0,   0,   0,
    239,  36,  41,  49,   8, 129, 252, 218,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 218,   1,   0,   0,
     49,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  67,  97, 114,
     80,  97, 114,  97, 109, 115,  83,  80,
     46,  78, 101, 117, 114,  97, 108,  78,
    101, 116, 119, 111, 114, 107,  76,  97,
    116, 101, 114,  97, 108,  67, 111, 110,
    116, 114, 111, 108,  46,  77, 111, 100,
    101, 108,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    112,  97, 116, 104,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_817ed0dfcd0ed40f = b_817ed0dfcd0ed40f.words;
#if !CAPNP_LITE
static const uint16_t m_817ed0dfcd0ed40f[] = {1, 0};
static const uint16_t i_817ed0dfcd0ed40f[] = {0, 1};
const ::capnp::_::RawSchema s_817ed0dfcd0ed40f = {
  0x817ed0dfcd0ed40f, b_817ed0dfcd0ed40f.words, 52, nullptr, m_817ed0dfcd0ed40f,
  0, 2, i_817ed0dfcd0ed40f, nullptr, nullptr, { &s_817ed0dfcd0ed40f, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<55> b_a5cd762cd951a455 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     85, 164,  81, 217,  44, 118, 205, 165,
     13,   0,   0,   0,   1,   0,   0,   0,
     89,  10,  85,  29, 102, 186,  38, 181,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
     33,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  67,  97, 114,
     67, 111, 110, 116, 114, 111, 108,  83,
     80,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    196, 104, 250,  22,  99,  55,  14, 226,
      1,   0,   0,   0,  50,   0,   0,   0,
     80,  97, 114,  97, 109,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     68,   0,   0,   0,   2,   0,   1,   0,
    109,  97, 100, 115,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    143, 147,  68, 238, 187, 112,  77, 205,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 114,  97, 109, 115,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    196, 104, 250,  22,  99,  55,  14, 226,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a5cd762cd951a455 = b_a5cd762cd951a455.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a5cd762cd951a455[] = {
  &s_cd4d70bbee44938f,
  &s_e20e376316fa68c4,
};
static const uint16_t m_a5cd762cd951a455[] = {0, 1};
static const uint16_t i_a5cd762cd951a455[] = {0, 1};
const ::capnp::_::RawSchema s_a5cd762cd951a455 = {
  0xa5cd762cd951a455, b_a5cd762cd951a455.words, 55, d_a5cd762cd951a455, m_a5cd762cd951a455,
  2, 2, i_a5cd762cd951a455, nullptr, nullptr, { &s_a5cd762cd951a455, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<48> b_e20e376316fa68c4 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    196, 104, 250,  22,  99,  55,  14, 226,
     26,   0,   0,   0,   1,   0,   0,   0,
     85, 164,  81, 217,  44, 118, 205, 165,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  67,  97, 114,
     67, 111, 110, 116, 114, 111, 108,  83,
     80,  46,  80,  97, 114,  97, 109,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    107, 101, 121,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e20e376316fa68c4 = b_e20e376316fa68c4.words;
#if !CAPNP_LITE
static const uint16_t m_e20e376316fa68c4[] = {0, 1};
static const uint16_t i_e20e376316fa68c4[] = {0, 1};
const ::capnp::_::RawSchema s_e20e376316fa68c4 = {
  0xe20e376316fa68c4, b_e20e376316fa68c4.words, 48, nullptr, m_e20e376316fa68c4,
  0, 2, i_e20e376316fa68c4, nullptr, nullptr, { &s_e20e376316fa68c4, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<148> b_f98d843bfd7004a3 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    163,   4, 112, 253,  59, 132, 141, 249,
     13,   0,   0,   0,   1,   0,   2,   0,
     89,  10,  85,  29, 102, 186,  38, 181,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,  71,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     85,   0,   0,   0, 143,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  66,  97,  99,
    107, 117, 112,  77,  97, 110,  97, 103,
    101, 114,  83,  80,   0,   0,   0,   0,
     16,   0,   0,   0,   1,   0,   1,   0,
    186,   0, 209, 234, 173, 146, 170, 184,
     25,   0,   0,   0,  58,   0,   0,   0,
    245, 205, 227, 214, 185, 241,  46, 211,
     21,   0,   0,   0,  66,   0,   0,   0,
    113,  60, 206, 237,  71, 240, 244, 216,
     17,   0,   0,   0, 114,   0,   0,   0,
     38, 223, 183,  96, 129,  39,  98, 158,
     17,   0,   0,   0,  90,   0,   0,   0,
     83, 116,  97, 116, 117, 115,   0,   0,
     86, 101, 114, 115, 105, 111, 110,   0,
     77, 101, 116,  97, 100,  97, 116,  97,
     69, 110, 116, 114, 121,   0,   0,   0,
     66,  97,  99, 107, 117, 112,  73, 110,
    102, 111,   0,   0,   0,   0,   0,   0,
     28,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    180,   0,   0,   0,   3,   0,   1,   0,
    192,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    189,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    188,   0,   0,   0,   3,   0,   1,   0,
    200,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    197,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    196,   0,   0,   0,   3,   0,   1,   0,
    208,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    205,   0,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    204,   0,   0,   0,   3,   0,   1,   0,
    216,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    213,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    212,   0,   0,   0,   3,   0,   1,   0,
    224,   0,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    221,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    220,   0,   0,   0,   3,   0,   1,   0,
    232,   0,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    229,   0,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    228,   0,   0,   0,   3,   0,   1,   0,
      0,   1,   0,   0,   2,   0,   1,   0,
     98,  97,  99, 107, 117, 112,  83, 116,
     97, 116, 117, 115,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    186,   0, 209, 234, 173, 146, 170, 184,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 115, 116, 111, 114, 101,  83,
    116,  97, 116, 117, 115,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    186,   0, 209, 234, 173, 146, 170, 184,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  97,  99, 107, 117, 112,  80, 114,
    111, 103, 114, 101, 115, 115,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 101, 115, 116, 111, 114, 101,  80,
    114, 111, 103, 114, 101, 115, 115,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,  97, 115, 116,  69, 114, 114, 111,
    114,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 114, 114, 101, 110, 116,  66,
     97,  99, 107, 117, 112,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     38, 223, 183,  96, 129,  39,  98, 158,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  97,  99, 107, 117, 112,  72, 105,
    115, 116, 111, 114, 121,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     38, 223, 183,  96, 129,  39,  98, 158,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f98d843bfd7004a3 = b_f98d843bfd7004a3.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f98d843bfd7004a3[] = {
  &s_9e62278160b7df26,
  &s_b8aa92adead100ba,
};
static const uint16_t m_f98d843bfd7004a3[] = {6, 2, 0, 5, 4, 3, 1};
static const uint16_t i_f98d843bfd7004a3[] = {0, 1, 2, 3, 4, 5, 6};
const ::capnp::_::RawSchema s_f98d843bfd7004a3 = {
  0xf98d843bfd7004a3, b_f98d843bfd7004a3.words, 148, d_f98d843bfd7004a3, m_f98d843bfd7004a3,
  2, 7, i_f98d843bfd7004a3, nullptr, nullptr, { &s_f98d843bfd7004a3, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<37> b_b8aa92adead100ba = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    186,   0, 209, 234, 173, 146, 170, 184,
     29,   0,   0,   0,   2,   0,   0,   0,
    163,   4, 112, 253,  59, 132, 141, 249,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 103,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  66,  97,  99,
    107, 117, 112,  77,  97, 110,  97, 103,
    101, 114,  83,  80,  46,  83, 116,  97,
    116, 117, 115,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 100, 108, 101,   0,   0,   0,   0,
    105, 110,  80, 114, 111, 103, 114, 101,
    115, 115,   0,   0,   0,   0,   0,   0,
     99, 111, 109, 112, 108, 101, 116, 101,
    100,   0,   0,   0,   0,   0,   0,   0,
    102,  97, 105, 108, 101, 100,   0,   0, }
};
::capnp::word const* const bp_b8aa92adead100ba = b_b8aa92adead100ba.words;
#if !CAPNP_LITE
static const uint16_t m_b8aa92adead100ba[] = {2, 3, 0, 1};
const ::capnp::_::RawSchema s_b8aa92adead100ba = {
  0xb8aa92adead100ba, b_b8aa92adead100ba.words, 37, nullptr, m_b8aa92adead100ba,
  0, 4, nullptr, nullptr, nullptr, { &s_b8aa92adead100ba, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
CAPNP_DEFINE_ENUM(Status_b8aa92adead100ba, b8aa92adead100ba);
static const ::capnp::_::AlignedData<94> b_d32ef1b9d6e3cdf5 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    245, 205, 227, 214, 185, 241,  46, 211,
     29,   0,   0,   0,   1,   0,   1,   0,
    163,   4, 112, 253,  59, 132, 141, 249,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  66,  97,  99,
    107, 117, 112,  77,  97, 110,  97, 103,
    101, 114,  83,  80,  46,  86, 101, 114,
    115, 105, 111, 110,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    136,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   0,   0,   0,   3,   0,   1,   0,
    140,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    132,   0,   0,   0,   3,   0,   1,   0,
    144,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    141,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    136,   0,   0,   0,   3,   0,   1,   0,
    148,   0,   0,   0,   2,   0,   1,   0,
    109,  97, 106, 111, 114,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 105, 110, 111, 114,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  97, 116,  99, 104,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 117, 105, 108, 100,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 114,  97, 110,  99, 104,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d32ef1b9d6e3cdf5 = b_d32ef1b9d6e3cdf5.words;
#if !CAPNP_LITE
static const uint16_t m_d32ef1b9d6e3cdf5[] = {4, 3, 0, 1, 2};
static const uint16_t i_d32ef1b9d6e3cdf5[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_d32ef1b9d6e3cdf5 = {
  0xd32ef1b9d6e3cdf5, b_d32ef1b9d6e3cdf5.words, 94, nullptr, m_d32ef1b9d6e3cdf5,
  0, 5, i_d32ef1b9d6e3cdf5, nullptr, nullptr, { &s_d32ef1b9d6e3cdf5, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<69> b_d8f4f047edce3c71 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    113,  60, 206, 237,  71, 240, 244, 216,
     29,   0,   0,   0,   1,   0,   0,   0,
    163,   4, 112, 253,  59, 132, 141, 249,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  90,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  66,  97,  99,
    107, 117, 112,  77,  97, 110,  97, 103,
    101, 114,  83,  80,  46,  77, 101, 116,
     97, 100,  97, 116,  97,  69, 110, 116,
    114, 121,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
    100,   0,   0,   0,   2,   0,   1,   0,
    107, 101, 121,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116,  97, 103, 115,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d8f4f047edce3c71 = b_d8f4f047edce3c71.words;
#if !CAPNP_LITE
static const uint16_t m_d8f4f047edce3c71[] = {0, 2, 1};
static const uint16_t i_d8f4f047edce3c71[] = {0, 1, 2};
const ::capnp::_::RawSchema s_d8f4f047edce3c71 = {
  0xd8f4f047edce3c71, b_d8f4f047edce3c71.words, 69, nullptr, m_d8f4f047edce3c71,
  0, 3, i_d8f4f047edce3c71, nullptr, nullptr, { &s_d8f4f047edce3c71, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<150> b_9e62278160b7df26 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     38, 223, 183,  96, 129,  39,  98, 158,
     29,   0,   0,   0,   1,   0,   1,   0,
    163,   4, 112, 253,  59, 132, 141, 249,
      6,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  66,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 199,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  66,  97,  99,
    107, 117, 112,  77,  97, 110,  97, 103,
    101, 114,  83,  80,  46,  66,  97,  99,
    107, 117, 112,  73, 110, 102, 111,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     32,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    209,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    208,   0,   0,   0,   3,   0,   1,   0,
    220,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    217,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    212,   0,   0,   0,   3,   0,   1,   0,
    224,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    221,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    216,   0,   0,   0,   3,   0,   1,   0,
    228,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,  32,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    225,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    224,   0,   0,   0,   3,   0,   1,   0,
    236,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    233,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    232,   0,   0,   0,   3,   0,   1,   0,
    244,   0,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    241,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    240,   0,   0,   0,   3,   0,   1,   0,
    252,   0,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    249,   0,   0,   0, 146,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    252,   0,   0,   0,   3,   0,   1,   0,
      8,   1,   0,   0,   2,   0,   1,   0,
      7,   0,   0,   0,   5,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   1,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   1,   0,   0,   3,   0,   1,   0,
     32,   1,   0,   0,   2,   0,   1,   0,
    100, 101, 118, 105,  99, 101,  73, 100,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118, 101, 114, 115, 105, 111, 110,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 102, 105, 103,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 115,  69, 110,  99, 114, 121, 112,
    116, 101, 100,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 114, 101,  97, 116, 101, 100,  65,
    116,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 112, 100,  97, 116, 101, 100,  65,
    116,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 117, 110, 110, 121, 112, 105, 108,
    111, 116,  86, 101, 114, 115, 105, 111,
    110,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    245, 205, 227, 214, 185, 241,  46, 211,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  97,  99, 107, 117, 112,  77, 101,
    116,  97, 100,  97, 116,  97,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    113,  60, 206, 237,  71, 240, 244, 216,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9e62278160b7df26 = b_9e62278160b7df26.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9e62278160b7df26[] = {
  &s_d32ef1b9d6e3cdf5,
  &s_d8f4f047edce3c71,
};
static const uint16_t m_9e62278160b7df26[] = {7, 2, 4, 0, 3, 6, 5, 1};
static const uint16_t i_9e62278160b7df26[] = {0, 1, 2, 3, 4, 5, 6, 7};
const ::capnp::_::RawSchema s_9e62278160b7df26 = {
  0x9e62278160b7df26, b_9e62278160b7df26.words, 150, d_9e62278160b7df26, m_9e62278160b7df26,
  2, 8, i_9e62278160b7df26, nullptr, nullptr, { &s_9e62278160b7df26, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<16> b_b86e6369214c01c8 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    200,   1,  76,  33, 105,  99, 110, 184,
     13,   0,   0,   0,   1,   0,   0,   0,
     89,  10,  85,  29, 102, 186,  38, 181,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  67,  97, 114,
     83, 116,  97, 116, 101,  83,  80,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_b86e6369214c01c8 = b_b86e6369214c01c8.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_b86e6369214c01c8 = {
  0xb86e6369214c01c8, b_b86e6369214c01c8.words, 16, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_b86e6369214c01c8, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<116> b_f416ec09499d9d19 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     25, 157, 157,  73,   9, 236,  22, 244,
     13,   0,   0,   0,   1,   0,   2,   0,
     89,  10,  85,  29, 102, 186,  38, 181,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 218,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  87,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  76, 105, 118,
    101,  77,  97, 112,  68,  97, 116,  97,
     83,  80,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     24,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   0,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    152,   0,   0,   0,   3,   0,   1,   0,
    164,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    161,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    160,   0,   0,   0,   3,   0,   1,   0,
    172,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    169,   0,   0,   0, 170,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    172,   0,   0,   0,   3,   0,   1,   0,
    184,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    181,   0,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    180,   0,   0,   0,   3,   0,   1,   0,
    192,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    189,   0,   0,   0, 194,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    192,   0,   0,   0,   3,   0,   1,   0,
    204,   0,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    201,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    200,   0,   0,   0,   3,   0,   1,   0,
    212,   0,   0,   0,   2,   0,   1,   0,
    115, 112, 101, 101, 100,  76, 105, 109,
    105, 116,  86,  97, 108, 105, 100,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 112, 101, 101, 100,  76, 105, 109,
    105, 116,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 112, 101, 101, 100,  76, 105, 109,
    105, 116,  65, 104, 101,  97, 100,  86,
     97, 108, 105, 100,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 112, 101, 101, 100,  76, 105, 109,
    105, 116,  65, 104, 101,  97, 100,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 112, 101, 101, 100,  76, 105, 109,
    105, 116,  65, 104, 101,  97, 100,  68,
    105, 115, 116,  97, 110,  99, 101,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    114, 111,  97, 100,  78,  97, 109, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f416ec09499d9d19 = b_f416ec09499d9d19.words;
#if !CAPNP_LITE
static const uint16_t m_f416ec09499d9d19[] = {5, 1, 3, 4, 2, 0};
static const uint16_t i_f416ec09499d9d19[] = {0, 1, 2, 3, 4, 5};
const ::capnp::_::RawSchema s_f416ec09499d9d19 = {
  0xf416ec09499d9d19, b_f416ec09499d9d19.words, 116, nullptr, m_f416ec09499d9d19,
  0, 6, i_f416ec09499d9d19, nullptr, nullptr, { &s_f416ec09499d9d19, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_a1680744031fdb2d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     45, 219,  31,   3,  68,   7, 104, 161,
     13,   0,   0,   0,   1,   0,   0,   0,
     89,  10,  85,  29, 102, 186,  38, 181,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  67, 117, 115,
    116, 111, 109,  82, 101, 115, 101, 114,
    118, 101, 100,  57,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_a1680744031fdb2d = b_a1680744031fdb2d.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_a1680744031fdb2d = {
  0xa1680744031fdb2d, b_a1680744031fdb2d.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_a1680744031fdb2d, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_cb9fd56c7057593a = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     58,  89,  87, 112, 108, 213, 159, 203,
     13,   0,   0,   0,   1,   0,   0,   0,
     89,  10,  85,  29, 102, 186,  38, 181,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  67, 117, 115,
    116, 111, 109,  82, 101, 115, 101, 114,
    118, 101, 100,  49,  48,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_cb9fd56c7057593a = b_cb9fd56c7057593a.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_cb9fd56c7057593a = {
  0xcb9fd56c7057593a, b_cb9fd56c7057593a.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_cb9fd56c7057593a, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_c2243c65e0340384 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    132,   3,  52, 224, 101,  60,  36, 194,
     13,   0,   0,   0,   1,   0,   0,   0,
     89,  10,  85,  29, 102, 186,  38, 181,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  67, 117, 115,
    116, 111, 109,  82, 101, 115, 101, 114,
    118, 101, 100,  49,  49,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_c2243c65e0340384 = b_c2243c65e0340384.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_c2243c65e0340384 = {
  0xc2243c65e0340384, b_c2243c65e0340384.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_c2243c65e0340384, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_9ccdc8676701b412 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     18, 180,   1, 103, 103, 200, 205, 156,
     13,   0,   0,   0,   1,   0,   0,   0,
     89,  10,  85,  29, 102, 186,  38, 181,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  67, 117, 115,
    116, 111, 109,  82, 101, 115, 101, 114,
    118, 101, 100,  49,  50,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_9ccdc8676701b412 = b_9ccdc8676701b412.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_9ccdc8676701b412 = {
  0x9ccdc8676701b412, b_9ccdc8676701b412.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_9ccdc8676701b412, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_cd96dafb67a082d0 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    208, 130, 160, 103, 251, 218, 150, 205,
     13,   0,   0,   0,   1,   0,   0,   0,
     89,  10,  85,  29, 102, 186,  38, 181,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  67, 117, 115,
    116, 111, 109,  82, 101, 115, 101, 114,
    118, 101, 100,  49,  51,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_cd96dafb67a082d0 = b_cd96dafb67a082d0.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_cd96dafb67a082d0 = {
  0xcd96dafb67a082d0, b_cd96dafb67a082d0.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_cd96dafb67a082d0, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_b057204d7deadf3f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     63, 223, 234, 125,  77,  32,  87, 176,
     13,   0,   0,   0,   1,   0,   0,   0,
     89,  10,  85,  29, 102, 186,  38, 181,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  67, 117, 115,
    116, 111, 109,  82, 101, 115, 101, 114,
    118, 101, 100,  49,  52,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_b057204d7deadf3f = b_b057204d7deadf3f.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_b057204d7deadf3f = {
  0xb057204d7deadf3f, b_b057204d7deadf3f.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_b057204d7deadf3f, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_bd443b539493bc68 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    104, 188, 147, 148,  83,  59,  68, 189,
     13,   0,   0,   0,   1,   0,   0,   0,
     89,  10,  85,  29, 102, 186,  38, 181,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  67, 117, 115,
    116, 111, 109,  82, 101, 115, 101, 114,
    118, 101, 100,  49,  53,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_bd443b539493bc68 = b_bd443b539493bc68.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_bd443b539493bc68 = {
  0xbd443b539493bc68, b_bd443b539493bc68.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_bd443b539493bc68, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_fc6241ed8877b611 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     17, 182, 119, 136, 237,  65,  98, 252,
     13,   0,   0,   0,   1,   0,   0,   0,
     89,  10,  85,  29, 102, 186,  38, 181,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  67, 117, 115,
    116, 111, 109,  82, 101, 115, 101, 114,
    118, 101, 100,  49,  54,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_fc6241ed8877b611 = b_fc6241ed8877b611.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_fc6241ed8877b611 = {
  0xfc6241ed8877b611, b_fc6241ed8877b611.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_fc6241ed8877b611, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_a30662f84033036c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    108,   3,  51,  64, 248,  98,   6, 163,
     13,   0,   0,   0,   1,   0,   0,   0,
     89,  10,  85,  29, 102, 186,  38, 181,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  67, 117, 115,
    116, 111, 109,  82, 101, 115, 101, 114,
    118, 101, 100,  49,  55,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_a30662f84033036c = b_a30662f84033036c.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_a30662f84033036c = {
  0xa30662f84033036c, b_a30662f84033036c.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_a30662f84033036c, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_c86a3d38d13eb3ef = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    239, 179,  62, 209,  56,  61, 106, 200,
     13,   0,   0,   0,   1,   0,   0,   0,
     89,  10,  85,  29, 102, 186,  38, 181,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  67, 117, 115,
    116, 111, 109,  82, 101, 115, 101, 114,
    118, 101, 100,  49,  56,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_c86a3d38d13eb3ef = b_c86a3d38d13eb3ef.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_c86a3d38d13eb3ef = {
  0xc86a3d38d13eb3ef, b_c86a3d38d13eb3ef.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_c86a3d38d13eb3ef, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_a4f1eb3323f5f582 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    130, 245, 245,  35,  51, 235, 241, 164,
     13,   0,   0,   0,   1,   0,   0,   0,
     89,  10,  85,  29, 102, 186,  38, 181,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 117, 115, 116, 111, 109,  46,  99,
     97, 112, 110, 112,  58,  67, 117, 115,
    116, 111, 109,  82, 101, 115, 101, 114,
    118, 101, 100,  49,  57,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_a4f1eb3323f5f582 = b_a4f1eb3323f5f582.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_a4f1eb3323f5f582 = {
  0xa4f1eb3323f5f582, b_a4f1eb3323f5f582.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_a4f1eb3323f5f582, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace cereal {

// ModularAssistiveDrivingSystem
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t ModularAssistiveDrivingSystem::_capnpPrivate::dataWordSize;
constexpr uint16_t ModularAssistiveDrivingSystem::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind ModularAssistiveDrivingSystem::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ModularAssistiveDrivingSystem::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// SelfdriveStateSP
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t SelfdriveStateSP::_capnpPrivate::dataWordSize;
constexpr uint16_t SelfdriveStateSP::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind SelfdriveStateSP::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SelfdriveStateSP::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// ModelManagerSP
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t ModelManagerSP::_capnpPrivate::dataWordSize;
constexpr uint16_t ModelManagerSP::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind ModelManagerSP::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ModelManagerSP::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// ModelManagerSP::DownloadUri
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t ModelManagerSP::DownloadUri::_capnpPrivate::dataWordSize;
constexpr uint16_t ModelManagerSP::DownloadUri::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind ModelManagerSP::DownloadUri::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ModelManagerSP::DownloadUri::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// ModelManagerSP::DownloadProgress
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t ModelManagerSP::DownloadProgress::_capnpPrivate::dataWordSize;
constexpr uint16_t ModelManagerSP::DownloadProgress::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind ModelManagerSP::DownloadProgress::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ModelManagerSP::DownloadProgress::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// ModelManagerSP::Artifact
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t ModelManagerSP::Artifact::_capnpPrivate::dataWordSize;
constexpr uint16_t ModelManagerSP::Artifact::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind ModelManagerSP::Artifact::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ModelManagerSP::Artifact::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// ModelManagerSP::Model
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t ModelManagerSP::Model::_capnpPrivate::dataWordSize;
constexpr uint16_t ModelManagerSP::Model::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind ModelManagerSP::Model::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ModelManagerSP::Model::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// ModelManagerSP::Override
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t ModelManagerSP::Override::_capnpPrivate::dataWordSize;
constexpr uint16_t ModelManagerSP::Override::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind ModelManagerSP::Override::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ModelManagerSP::Override::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// ModelManagerSP::ModelBundle
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t ModelManagerSP::ModelBundle::_capnpPrivate::dataWordSize;
constexpr uint16_t ModelManagerSP::ModelBundle::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind ModelManagerSP::ModelBundle::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* ModelManagerSP::ModelBundle::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// LongitudinalPlanSP
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t LongitudinalPlanSP::_capnpPrivate::dataWordSize;
constexpr uint16_t LongitudinalPlanSP::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind LongitudinalPlanSP::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* LongitudinalPlanSP::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// LongitudinalPlanSP::DynamicExperimentalControl
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t LongitudinalPlanSP::DynamicExperimentalControl::_capnpPrivate::dataWordSize;
constexpr uint16_t LongitudinalPlanSP::DynamicExperimentalControl::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind LongitudinalPlanSP::DynamicExperimentalControl::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* LongitudinalPlanSP::DynamicExperimentalControl::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// OnroadEventSP
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t OnroadEventSP::_capnpPrivate::dataWordSize;
constexpr uint16_t OnroadEventSP::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind OnroadEventSP::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* OnroadEventSP::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// OnroadEventSP::Event
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t OnroadEventSP::Event::_capnpPrivate::dataWordSize;
constexpr uint16_t OnroadEventSP::Event::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind OnroadEventSP::Event::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* OnroadEventSP::Event::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// CarParamsSP
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t CarParamsSP::_capnpPrivate::dataWordSize;
constexpr uint16_t CarParamsSP::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind CarParamsSP::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CarParamsSP::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// CarParamsSP::NeuralNetworkLateralControl
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t CarParamsSP::NeuralNetworkLateralControl::_capnpPrivate::dataWordSize;
constexpr uint16_t CarParamsSP::NeuralNetworkLateralControl::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind CarParamsSP::NeuralNetworkLateralControl::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CarParamsSP::NeuralNetworkLateralControl::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// CarParamsSP::NeuralNetworkLateralControl::Model
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t CarParamsSP::NeuralNetworkLateralControl::Model::_capnpPrivate::dataWordSize;
constexpr uint16_t CarParamsSP::NeuralNetworkLateralControl::Model::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind CarParamsSP::NeuralNetworkLateralControl::Model::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CarParamsSP::NeuralNetworkLateralControl::Model::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// CarControlSP
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t CarControlSP::_capnpPrivate::dataWordSize;
constexpr uint16_t CarControlSP::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind CarControlSP::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CarControlSP::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// CarControlSP::Param
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t CarControlSP::Param::_capnpPrivate::dataWordSize;
constexpr uint16_t CarControlSP::Param::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind CarControlSP::Param::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CarControlSP::Param::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// BackupManagerSP
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t BackupManagerSP::_capnpPrivate::dataWordSize;
constexpr uint16_t BackupManagerSP::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind BackupManagerSP::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* BackupManagerSP::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// BackupManagerSP::Version
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t BackupManagerSP::Version::_capnpPrivate::dataWordSize;
constexpr uint16_t BackupManagerSP::Version::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind BackupManagerSP::Version::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* BackupManagerSP::Version::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// BackupManagerSP::MetadataEntry
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t BackupManagerSP::MetadataEntry::_capnpPrivate::dataWordSize;
constexpr uint16_t BackupManagerSP::MetadataEntry::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind BackupManagerSP::MetadataEntry::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* BackupManagerSP::MetadataEntry::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// BackupManagerSP::BackupInfo
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t BackupManagerSP::BackupInfo::_capnpPrivate::dataWordSize;
constexpr uint16_t BackupManagerSP::BackupInfo::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind BackupManagerSP::BackupInfo::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* BackupManagerSP::BackupInfo::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// CarStateSP
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t CarStateSP::_capnpPrivate::dataWordSize;
constexpr uint16_t CarStateSP::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind CarStateSP::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CarStateSP::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// LiveMapDataSP
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t LiveMapDataSP::_capnpPrivate::dataWordSize;
constexpr uint16_t LiveMapDataSP::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind LiveMapDataSP::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* LiveMapDataSP::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// CustomReserved9
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t CustomReserved9::_capnpPrivate::dataWordSize;
constexpr uint16_t CustomReserved9::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind CustomReserved9::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CustomReserved9::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// CustomReserved10
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t CustomReserved10::_capnpPrivate::dataWordSize;
constexpr uint16_t CustomReserved10::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind CustomReserved10::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CustomReserved10::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// CustomReserved11
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t CustomReserved11::_capnpPrivate::dataWordSize;
constexpr uint16_t CustomReserved11::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind CustomReserved11::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CustomReserved11::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// CustomReserved12
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t CustomReserved12::_capnpPrivate::dataWordSize;
constexpr uint16_t CustomReserved12::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind CustomReserved12::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CustomReserved12::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// CustomReserved13
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t CustomReserved13::_capnpPrivate::dataWordSize;
constexpr uint16_t CustomReserved13::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind CustomReserved13::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CustomReserved13::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// CustomReserved14
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t CustomReserved14::_capnpPrivate::dataWordSize;
constexpr uint16_t CustomReserved14::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind CustomReserved14::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CustomReserved14::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// CustomReserved15
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t CustomReserved15::_capnpPrivate::dataWordSize;
constexpr uint16_t CustomReserved15::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind CustomReserved15::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CustomReserved15::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// CustomReserved16
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t CustomReserved16::_capnpPrivate::dataWordSize;
constexpr uint16_t CustomReserved16::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind CustomReserved16::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CustomReserved16::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// CustomReserved17
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t CustomReserved17::_capnpPrivate::dataWordSize;
constexpr uint16_t CustomReserved17::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind CustomReserved17::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CustomReserved17::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// CustomReserved18
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t CustomReserved18::_capnpPrivate::dataWordSize;
constexpr uint16_t CustomReserved18::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind CustomReserved18::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CustomReserved18::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// CustomReserved19
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t CustomReserved19::_capnpPrivate::dataWordSize;
constexpr uint16_t CustomReserved19::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind CustomReserved19::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* CustomReserved19::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE


}  // namespace

